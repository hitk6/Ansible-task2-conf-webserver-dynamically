
- name: sg group with port no 80,22
  ec2_group:
    name: "task2_sg"
    description: sg with rule descriptions
    vpc_id: vpc-608d9b08
    #aws_access_key: "AKIAXBZHOKAOO5EACUS2"
    #aws_secret_key: "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"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    region: ap-south-1
    rules:
      - proto: tcp
        ports:
        - 80
        - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 80,22
        # when: false

- name: provisioning ec2
  ec2:
    key_name: 12aug
    instance_type: t2.micro
    region: ap-south-1
    image: ami-052c08d70def0ac62
    group: "task2_sg" 
    count: 1
    vpc_subnet_id: subnet-3a5e3276
    assign_public_ip: yes
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    id: "{{ my_id }}"
    instance_tags: '{"Name":"ec21"}' 
    #wait: yes
    #wait_timeout: 60
  register: x

- debug: 
   msg: "{{ x.instances[0].id }}  > q.txt"

- ec2:
    region: ap-south-1
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    instance_ids: 
        - "{{ x.instances[0].id }}"
    state: absent
    id: "{{ my_id }}"

   #- name: jugaad of ip
   # copy:
   #      content: " {{ x.instances[0].public_ip }}"
   #      dest: "/etc/myroles/q.txt"

- name: Remove ip.
  lineinfile:
        path: /etc/inv_dir/aws_ip
        line: "{{ x.instances[0].public_ip }}"
        # insertafter: alias.*
        state: absent


- name: Remove id.
  lineinfile:
        path: /etc/myroles/del/vars/main.yml
        line: "my_id: {{ my_id }}"
        # insertafter: alias.*
        state: absent
